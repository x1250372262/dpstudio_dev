/*
 * Copyright 2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dpstudio.dev.bug.model;

import net.ymate.platform.core.beans.annotation.PropertyState;
import net.ymate.platform.core.persistence.annotation.Comment;
import net.ymate.platform.core.persistence.annotation.Default;
import net.ymate.platform.core.persistence.annotation.Entity;
import net.ymate.platform.core.persistence.annotation.Id;
import net.ymate.platform.core.persistence.annotation.Property;
import net.ymate.platform.persistence.jdbc.support.BaseEntity;
import net.ymate.platform.core.persistence.IShardingable;
import net.ymate.platform.persistence.jdbc.IDatabase;
import net.ymate.platform.persistence.jdbc.IDatabaseConnectionHolder;

/**
 * BugLog generated By EntityMojo on 2020/06/30 16:32:30
 *
 * @author YMP (https://www.ymate.net/)
 */
@Entity(BugLog.TABLE_NAME)
public class BugLog extends BaseEntity<BugLog, java.lang.String> {

    private static final long serialVersionUID = 1L;

    @Id
    @Property(name = FIELDS.ID, nullable = false, length = 32)
    @Comment("")
    @PropertyState(propertyName = FIELDS.ID)
    private java.lang.String id;

    
    @Property(name = FIELDS.BUG_ID, nullable = false, length = 32)
    @Comment("")
    @PropertyState(propertyName = FIELDS.BUG_ID)
    private java.lang.String bugId;

    
    @Property(name = FIELDS.HANDLER_USER, nullable = false, length = 100)
    @Comment("处理人")
    @PropertyState(propertyName = FIELDS.HANDLER_USER)
    private java.lang.String handlerUser;

    
    @Property(name = FIELDS.HANDLER_TIME, length = 13)
    @Default("0")
    @Comment("处理时间")
    @PropertyState(propertyName = FIELDS.HANDLER_TIME)
    private java.lang.Long handlerTime;

    
    @Property(name = FIELDS.ACTION, length = 32)
    @Comment("动作")
    @PropertyState(propertyName = FIELDS.ACTION)
    private java.lang.String action;


    public BugLog() {
    }

    public BugLog(IDatabase dbOwner) {
        super(dbOwner);
    }

    public BugLog(java.lang.String id, java.lang.String bugId, java.lang.String handlerUser) {
        this.id = id;
        this.bugId = bugId;
        this.handlerUser = handlerUser;
    }

        public BugLog(IDatabase dbOwner, java.lang.String id, java.lang.String bugId, java.lang.String handlerUser) {
            super(dbOwner);
            this.id = id;
            this.bugId = bugId;
            this.handlerUser = handlerUser;
        }

    public BugLog(java.lang.String id, java.lang.String bugId, java.lang.String handlerUser, java.lang.Long handlerTime, java.lang.String action) {
        this.id = id;
        this.bugId = bugId;
        this.handlerUser = handlerUser;
        this.handlerTime = handlerTime;
        this.action = action;
    }

    public BugLog(IDatabase dbOwner, java.lang.String id, java.lang.String bugId, java.lang.String handlerUser, java.lang.Long handlerTime, java.lang.String action) {
        super(dbOwner);
        this.id = id;
        this.bugId = bugId;
        this.handlerUser = handlerUser;
        this.handlerTime = handlerTime;
        this.action = action;
    }

    @Override
    public java.lang.String getId() {
        return id;
    }

    @Override
    public void setId(java.lang.String id) {
        this.id = id;
    }

    public java.lang.String getBugId() {
        return bugId;
    }

    public void setBugId(java.lang.String bugId) {
        this.bugId = bugId;
    }
    public java.lang.String getHandlerUser() {
        return handlerUser;
    }

    public void setHandlerUser(java.lang.String handlerUser) {
        this.handlerUser = handlerUser;
    }
    public java.lang.Long getHandlerTime() {
        return handlerTime;
    }

    public void setHandlerTime(java.lang.Long handlerTime) {
        this.handlerTime = handlerTime;
    }
    public java.lang.String getAction() {
        return action;
    }

    public void setAction(java.lang.String action) {
        this.action = action;
    }

    public BugLogBuilder bind() {
        return new BugLogBuilder(this);
    }

    public static BugLogBuilder builder() {
        return new BugLogBuilder();
    }

        public static BugLogBuilder builder(IDatabase dbOwner) {
            return new BugLogBuilder(dbOwner);
        }

    public static class BugLogBuilder {

        private final BugLog targetEntity;

        public BugLogBuilder() {
            targetEntity = new BugLog();
        }

        public BugLogBuilder(IDatabase dbOwner) {
            targetEntity = new BugLog(dbOwner);
        }

        public BugLogBuilder(BugLog targetEntity) {
            this.targetEntity = targetEntity;
        }

        public BugLog build() {
            return targetEntity;
        }

        public IDatabaseConnectionHolder connectionHolder() {
            return targetEntity.getConnectionHolder();
        }

        public BugLogBuilder connectionHolder(IDatabaseConnectionHolder connectionHolder) {
            targetEntity.setConnectionHolder(connectionHolder);
            return this;
        }

        public String dataSourceName() {
            return targetEntity.getDataSourceName();
        }

        public BugLogBuilder dataSourceName(String dataSourceName) {
            targetEntity.setDataSourceName(dataSourceName);
            return this;
        }

        public IShardingable shardingable() {
            return targetEntity.getShardingable();
        }

        public BugLogBuilder shardingable(IShardingable shardingable) {
            targetEntity.setShardingable(shardingable);
            return this;
        }


        public java.lang.String id() {
            return targetEntity.getId();
        }

        public BugLogBuilder id(java.lang.String id) {
            targetEntity.setId(id);
            return this;
        }

        public java.lang.String bugId() {
            return targetEntity.getBugId();
        }

        public BugLogBuilder bugId(java.lang.String bugId) {
            targetEntity.setBugId(bugId);
            return this;
        }

        public java.lang.String handlerUser() {
            return targetEntity.getHandlerUser();
        }

        public BugLogBuilder handlerUser(java.lang.String handlerUser) {
            targetEntity.setHandlerUser(handlerUser);
            return this;
        }

        public java.lang.Long handlerTime() {
            return targetEntity.getHandlerTime();
        }

        public BugLogBuilder handlerTime(java.lang.Long handlerTime) {
            targetEntity.setHandlerTime(handlerTime);
            return this;
        }

        public java.lang.String action() {
            return targetEntity.getAction();
        }

        public BugLogBuilder action(java.lang.String action) {
            targetEntity.setAction(action);
            return this;
        }
    }

    public interface FIELDS {
        String ID = "id";
        String BUG_ID = "bug_id";
        String HANDLER_USER = "handler_user";
        String HANDLER_TIME = "handler_time";
        String ACTION = "action";
    }

    public static final String TABLE_NAME = "bug_log";
}
