/*
 * Copyright 2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dpstudio.dev.bug.model;

import net.ymate.platform.core.beans.annotation.PropertyState;
import net.ymate.platform.core.persistence.annotation.Comment;
import net.ymate.platform.core.persistence.annotation.Default;
import net.ymate.platform.core.persistence.annotation.Entity;
import net.ymate.platform.core.persistence.annotation.Id;
import net.ymate.platform.core.persistence.annotation.Property;
import net.ymate.platform.persistence.jdbc.support.BaseEntity;
import net.ymate.platform.core.persistence.IShardingable;
import net.ymate.platform.persistence.jdbc.IDatabase;
import net.ymate.platform.persistence.jdbc.IDatabaseConnectionHolder;

/**
 * BugUser generated By EntityMojo on 2020/06/30 16:32:30
 *
 * @author YMP (https://www.ymate.net/)
 */
@Entity(BugUser.TABLE_NAME)
public class BugUser extends BaseEntity<BugUser, java.lang.String> {

    private static final long serialVersionUID = 1L;

    @Id
    @Property(name = FIELDS.ID, nullable = false, length = 32)
    @Comment("")
    @PropertyState(propertyName = FIELDS.ID)
    private java.lang.String id;

    
    @Property(name = FIELDS.NAME, nullable = false, length = 100)
    @Comment("名称")
    @PropertyState(propertyName = FIELDS.NAME)
    private java.lang.String name;

    
    @Property(name = FIELDS.CREATE_TIME, length = 13)
    @Default("0")
    @Comment("创建时间")
    @PropertyState(propertyName = FIELDS.CREATE_TIME)
    private java.lang.Long createTime;


    public BugUser() {
    }

    public BugUser(IDatabase dbOwner) {
        super(dbOwner);
    }

    public BugUser(java.lang.String id, java.lang.String name) {
        this.id = id;
        this.name = name;
    }

        public BugUser(IDatabase dbOwner, java.lang.String id, java.lang.String name) {
            super(dbOwner);
            this.id = id;
            this.name = name;
        }

    public BugUser(java.lang.String id, java.lang.String name, java.lang.Long createTime) {
        this.id = id;
        this.name = name;
        this.createTime = createTime;
    }

    public BugUser(IDatabase dbOwner, java.lang.String id, java.lang.String name, java.lang.Long createTime) {
        super(dbOwner);
        this.id = id;
        this.name = name;
        this.createTime = createTime;
    }

    @Override
    public java.lang.String getId() {
        return id;
    }

    @Override
    public void setId(java.lang.String id) {
        this.id = id;
    }

    public java.lang.String getName() {
        return name;
    }

    public void setName(java.lang.String name) {
        this.name = name;
    }
    public java.lang.Long getCreateTime() {
        return createTime;
    }

    public void setCreateTime(java.lang.Long createTime) {
        this.createTime = createTime;
    }

    public BugUserBuilder bind() {
        return new BugUserBuilder(this);
    }

    public static BugUserBuilder builder() {
        return new BugUserBuilder();
    }

        public static BugUserBuilder builder(IDatabase dbOwner) {
            return new BugUserBuilder(dbOwner);
        }

    public static class BugUserBuilder {

        private final BugUser targetEntity;

        public BugUserBuilder() {
            targetEntity = new BugUser();
        }

        public BugUserBuilder(IDatabase dbOwner) {
            targetEntity = new BugUser(dbOwner);
        }

        public BugUserBuilder(BugUser targetEntity) {
            this.targetEntity = targetEntity;
        }

        public BugUser build() {
            return targetEntity;
        }

        public IDatabaseConnectionHolder connectionHolder() {
            return targetEntity.getConnectionHolder();
        }

        public BugUserBuilder connectionHolder(IDatabaseConnectionHolder connectionHolder) {
            targetEntity.setConnectionHolder(connectionHolder);
            return this;
        }

        public String dataSourceName() {
            return targetEntity.getDataSourceName();
        }

        public BugUserBuilder dataSourceName(String dataSourceName) {
            targetEntity.setDataSourceName(dataSourceName);
            return this;
        }

        public IShardingable shardingable() {
            return targetEntity.getShardingable();
        }

        public BugUserBuilder shardingable(IShardingable shardingable) {
            targetEntity.setShardingable(shardingable);
            return this;
        }


        public java.lang.String id() {
            return targetEntity.getId();
        }

        public BugUserBuilder id(java.lang.String id) {
            targetEntity.setId(id);
            return this;
        }

        public java.lang.String name() {
            return targetEntity.getName();
        }

        public BugUserBuilder name(java.lang.String name) {
            targetEntity.setName(name);
            return this;
        }

        public java.lang.Long createTime() {
            return targetEntity.getCreateTime();
        }

        public BugUserBuilder createTime(java.lang.Long createTime) {
            targetEntity.setCreateTime(createTime);
            return this;
        }
    }

    public interface FIELDS {
        String ID = "id";
        String NAME = "name";
        String CREATE_TIME = "create_time";
    }

    public static final String TABLE_NAME = "bug_user";
}
